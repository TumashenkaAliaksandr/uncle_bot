from typing import Any

from django.db import models

class Album(models.Model):
    name = models.CharField(max_length=255, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –∞–ª—å–±–æ–º–∞")
    description = models.TextField(blank=True, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ")
    cover = models.ImageField(upload_to='albums/covers/', blank=True, null=True, verbose_name="–û–±–ª–æ–∂–∫–∞")
    release_date = models.DateField(verbose_name="–î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞")
    authors = models.CharField(max_length=255, verbose_name="–ê–≤—Ç–æ—Ä—ã")

    class Meta:
        verbose_name = 'üíΩ –ê–ª—å–±–æ–º'
        verbose_name_plural = 'üíΩ –ê–ª—å–±–æ–º—ã'

    def __init__(self, *args: Any, **kwargs: Any):
        super().__init__(*args, **kwargs)
        self.tracks_movies = None

    def __str__(self):
        return self.name


class Track(models.Model):
    album = models.ForeignKey('botapp.Album', on_delete=models.CASCADE, related_name='tracks', verbose_name="–ê–ª—å–±–æ–º")
    title = models.CharField(max_length=255, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞")
    description = models.TextField(blank=True, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ")
    cover = models.ImageField(upload_to='tracks/covers/', blank=True, null=True, verbose_name="–û–±–ª–æ–∂–∫–∞")
    audio_file = models.FileField(upload_to='tracks/audio/', blank=True, null=True, verbose_name="–ê—É–¥–∏–æ—Ñ–∞–π–ª (MP3)")
    is_main = models.BooleanField(default=True, verbose_name='–ù–∞ –≥–ª–∞–≤–Ω—É—é', blank=True)
    is_popular = models.BooleanField(verbose_name='–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ', default=False, blank=True)
    is_movies = models.BooleanField(verbose_name='–í –ö–∏–Ω–æ', default=False, blank=True)
    is_tomorrow = models.BooleanField(verbose_name='–ó–∞–≤—Ç—Ä–∞ –≤ —ç—Ñ–∏—Ä–µ', default=False, blank=True)
    is_tonight = models.BooleanField(verbose_name='–°–µ–≥–æ–¥–Ω—è –≤ —ç—Ñ–∏—Ä–µ', default=False, blank=True)

    class Meta:
        verbose_name = 'üéº –¢—Ä–µ–∫'
        verbose_name_plural = 'üéº –¢—Ä–µ–∫–∏'

    def __str__(self):
        return self.title

class News(models.Model):
    title_news = models.CharField(max_length=300, default='News')
    description = models.TextField(blank=True, verbose_name='–û–ø–∏—Å–∞–Ω–∏–µ')
    photo = models.ImageField(upload_to='news/photos/', blank=True, null=True, verbose_name='–§–æ—Ç–æ')
    audio = models.FileField(upload_to='news/audio/', blank=True, null=True, verbose_name='–ê—É–¥–∏–æ')
    date = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')
    track = models.ForeignKey(
        'botapp.Track',
        on_delete=models.SET_NULL,
        blank=True,
        null=True,
        related_name='news',
        verbose_name='–ê—É–¥–∏–æ—Ç—Ä–µ–∫'
    )

    class Meta:
        verbose_name = 'üì∞ –ù–æ–≤–æ—Å—Ç—å'
        verbose_name_plural = 'üì∞ –ù–æ–≤–æ—Å—Ç–∏'

    def __str__(self):
        return self.title_news


class SongInfo(models.Model):
    title = models.CharField(max_length=255, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏")
    lyrics = models.TextField(verbose_name="–¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏")
    chords = models.TextField(verbose_name="–ê–∫–∫–æ—Ä–¥—ã –ø–µ—Å–Ω–∏", help_text="–í–≤–µ–¥–∏—Ç–µ –∞–∫–∫–æ—Ä–¥—ã –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ")

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = "üçì –ü–µ—Å–Ω—è"
        verbose_name_plural = "üçì –ê–∫–∫–æ—Ä–¥—ã –ø–µ—Å–µ–Ω"


class Countdown(models.Model):  # –Ø–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å id
    end_time = models.DateTimeField("–ö–æ–Ω–µ—á–Ω–æ–µ –≤—Ä–µ–º—è", help_text="–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ—Ç—Å—á—ë—Ç–∞")
    name = models.CharField(max_length=100, unique=True, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞", blank=True, null=True)

    def __str__(self):
        return f"{self.name or '–û—Ç—Å—á—ë—Ç'} –¥–æ {self.end_time}"


class Video(models.Model):
    name = models.CharField(max_length=255, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ")
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ")
    date = models.DateTimeField(auto_now_add=True, verbose_name="–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
    video_file = models.FileField(upload_to='videos/', verbose_name="–í–∏–¥–µ–æ —Ñ–∞–π–ª")

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = "üìπ –í–∏–¥–µ–æ"
        verbose_name_plural = "üìπ –í–∏–¥–µ–æ"


class SocialNetwork(models.Model):
    name = models.CharField(max_length=50, unique=True)
    url = models.URLField(max_length=255)
    svg_icon = models.TextField(
        help_text="SVG –∫–æ–¥ –∏–∫–æ–Ω–∫–∏ —Å–æ—Ü—Å–µ—Ç–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, <svg>...</svg>"
    )
    order = models.PositiveIntegerField(default=0)

    class Meta:
        ordering = ['order', 'name']
        verbose_name = "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å"
        verbose_name_plural = "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏"

    def __str__(self):
        return self.name
