import asyncio
from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from botapp.templates.botapp.handlers.clear_chat import clear_chat
from botapp.templates.botapp.keyboards import keyboard
from botapp.templates.botapp.loader import sent_messages, bot

router = Router()

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º—É–∑—ã–∫–∞–Ω—Ç–æ–≤
MUSICIAN_ADMIN_ID = 83027638

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º ID –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—á–∏—Å—Ç–∫–∏
async def send_and_store(chat_id: int, text: str, **kwargs) -> types.Message:
    message = await bot.send_message(chat_id, text, **kwargs)
    sent_messages.setdefault(chat_id, []).append(message.message_id)
    return message

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM ‚Äî –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
class ProposalStates(StatesGroup):
    waiting_for_proposal = State()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –º—É–∑—ã–∫–∞–Ω—Ç–∞–º"
@router.message(lambda message: message.text == "‚úíÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å")
async def ask_proposal(message: types.Message, state: FSMContext):
    sent_messages.setdefault(message.chat.id, []).append(message.message_id)
    await send_and_store(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ò–º—è –∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏\n–ï—Å–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –º—É–∑—ã–∫–∞–Ω—Ç–æ–≤\n–û–Ω–∏ —Å –≤–∞–º–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂—É—Ç—å—Å—è!")
    await state.set_state(ProposalStates.waiting_for_proposal)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(ProposalStates.waiting_for_proposal)
async def receive_proposal(message: types.Message, state: FSMContext):
    user = message.from_user
    user_mention = f"@{user.username}" if user.username else user.full_name
    proposal_text = (
        f"–ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç {user_mention} (id: {user.id}):\n\n{message.text}"
    )
    full_text = f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—Å–ª–∞–Ω–æ –∏–∑ –±–æ—Ç–∞:\n\n{proposal_text}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID
    sent = await bot.send_message(MUSICIAN_ADMIN_ID, full_text)
    sent_messages.setdefault(MUSICIAN_ADMIN_ID, []).append(sent.message_id)

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await send_and_store(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º—É–∑—ã–∫–∞–Ω—Ç–∞–º.", reply_markup=keyboard)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    sent_messages.setdefault(message.chat.id, []).append(message.message_id)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ—á–∏—Å—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç (300 —Å–µ–∫—É–Ω–¥)
    asyncio.create_task(clear_chat(message.chat.id, delay_seconds=300))
    asyncio.create_task(clear_chat(MUSICIAN_ADMIN_ID, delay_seconds=300))

    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    await state.clear()
